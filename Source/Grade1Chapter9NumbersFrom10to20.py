from manim import *
from numpy import size
from AbstractAnim import AbstractAnim

import cvo

class NUM10to20(AbstractAnim):
    def construct(self):
        self.RenderSkillbancLogo()
        self.ten()
        self.above10()
        self.GithubSourceCodeReference()
        self.SubscribeYoutube()
        self.fadeOutCurrentScene()
        
    def ten(self):
        text=Text("Number 10",font_size=60).to_edge(UP)
        self.play(Write(text))
        self.wait(1)
        text1=Text("10 is the smallest two digit number",font_size=60).next_to(text,DOWN,buff=3)
        self.play(Write(text1))
        self.wait(1)
        self.fadeOutCurrentScene()

        text = Text("Group of 10 objects", font_size=60,color=ORANGE)
        self.play(Write(text))
        self.play(text.animate.shift(UP * 3))

        text = Text("10 sticks", font_size=40,color=DARK_BROWN)
        self.play(Write(text))
        self.play(text.animate.shift(LEFT * 3))

        text = Text("10 balls", font_size=40,color=YELLOW)
        self.play(Write(text))
        self.play(text.animate.shift(RIGHT * 3))
        
        sticks = VGroup(*[Line(ORIGIN, UP,color=DARK_BROWN).scale(1.5) for _ in range(10)])
        sticks.arrange(RIGHT, buff=0.5)
        bundle = VGroup(*[Line(ORIGIN, UP,color=DARK_BROWN).scale(1.5) for _ in range(10)])
        bundle.arrange(RIGHT, buff=0.2)
        bundle.add(SurroundingRectangle(bundle, color=BLUE))
        
        balls = VGroup(*[Circle(color=YELLOW).scale(0.3) for _ in range(10)])
        balls.arrange_in_grid(rows=2, cols=5, buff=0.5)
        bundle1 = VGroup(*[Circle(color=YELLOW).scale(0.3) for _ in range(10)])
        bundle1.arrange_in_grid(rows=2, cols=5, buff=0.2)
        bundle1.add(SurroundingRectangle(bundle1, color=RED))
        
        sticks_group = VGroup(sticks, bundle).arrange(DOWN, buff=1)
        
        flowers_group = VGroup(balls, bundle1).arrange(DOWN, buff=1)
        all_groups = VGroup(sticks_group, flowers_group).arrange(RIGHT, buff=2)
        
        self.play(LaggedStart(*[Write(stick) for stick in sticks], lag_ratio=0.1))
        self.play(Transform(sticks, bundle))
        
        self.wait(1)
        
        self.play(LaggedStart(*[Write(ball) for ball in balls], lag_ratio=0.1))
        self.play(Transform(balls, bundle1))
        
        self.wait(1)
        self.fadeOutCurrentScene()

    def above10(self):
        text = Text("Numbers above 10", font_size=60)
        self.play(Write(text))
        self.wait(1)
        self.fadeOutCurrentScene()

        text = Text("ELEVEN  11", font_size=60)
        self.play(Write(text))
        self.play(text.animate.shift(UP * 3))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=72).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=72).next_to(ten_circles, DOWN, buff=1.5)
        self.play(Write(plus_sign))
        self.wait(1)
        one_circle = Circle(radius=0.5, color=RED).next_to(plus_sign,DOWN).scale(0.5)
        one_label = Text("1", font_size=72).next_to(one_circle,DOWN)
        self.play(Write(one_circle), Write(one_label))
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(1)
        ten_circles2 = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(RIGHT+UP*1.5)
        ten_circles2.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(RIGHT * 3)
        # ten_circles2.add(SurroundingRectangle(ten_circles2,color=YELLOW))
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles2], lag_ratio=0.1))
        one_circle1 = Circle(radius=0.5, color=RED).next_to(ten_circles2,DOWN,buff=0.3).scale(0.5)
        self.play(Write(one_circle1))
        eleven_label = Text("11", font_size=72).next_to(one_circle1,DOWN,buff=0.5)
        self.wait(1)
        self.play(Write(eleven_label))
        self.wait(1)
        self.play(Indicate(eleven_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()

        text = Text("TWELVE  12", font_size=60)
        self.play(Write(text))
        self.play(text.animate.shift(UP * 3))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=72).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=72).next_to(ten_circles, DOWN, buff=1.5)
        self.play(Write(plus_sign))
        self.wait(1)
        two_circles = VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(2)])
        two_circles.arrange(RIGHT, buff=0.5)
        two_circles.next_to(plus_sign, DOWN, buff=0.5)
        self.play(LaggedStart(*[Write(circle) for circle in two_circles], lag_ratio=0.1))
        two_label = Text("2", font_size=72).next_to(two_circles,DOWN)
        self.play(Write(two_label))
        self.wait(1)
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(1)
        ten_circles2 = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(RIGHT+UP*1.5)
        ten_circles2.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(RIGHT * 3)
        # ten_circles2.add(SurroundingRectangle(ten_circles2,color=YELLOW))
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles2], lag_ratio=0.1))
        two_circles1 = VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(2)])
        two_circles1.arrange(RIGHT, buff=0.5)
        two_circles1.next_to(ten_circles2,DOWN,buff=0.2)
        self.play(LaggedStart(*[Write(circle) for circle in two_circles1], lag_ratio=0.1))
        twelve_label = Text("12", font_size=72).next_to(two_circles1,DOWN,buff=0.5)
        self.play(Write(twelve_label))
        self.wait(1)
        self.play(Indicate(twelve_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()

        text = Text("THIRTEEN  13", font_size=60)
        self.play(Write(text))
        self.play(text.animate.shift(UP * 3))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=60).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=60).next_to(ten_label, DOWN, buff=0.5)
        self.play(Write(plus_sign))
        self.wait(1)
        three_circles =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(3)])
        three_circles.arrange_in_grid(rows=2, cols=5, buff=0.2)
        three_circles.next_to(plus_sign, DOWN, buff=0.5)
        self.play(LaggedStart(*[Write(circle) for circle in three_circles], lag_ratio=0.1))
        three_label = Text("3", font_size=60).next_to(three_circles,DOWN)
        self.play(Write(three_label))
        self.wait(1)
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(1)
        ten_circles2 = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(RIGHT+UP*1.5)
        ten_circles2.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(RIGHT * 3)
        # ten_circles2.add(SurroundingRectangle(ten_circles2,color=YELLOW))
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles2], lag_ratio=0.1))
        three_circles1 =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(3)])
        three_circles1.arrange_in_grid(rows=2, cols=5, buff=0.2)
        three_circles1.next_to(ten_circles2, DOWN, buff=0.2)
        self.play(LaggedStart(*[Write(circle) for circle in three_circles1], lag_ratio=0.1))
        thirteen_label = Text("13", font_size=60).next_to(three_circles1,DOWN,buff=0.5)
        self.play(Write(thirteen_label))
        self.wait(1)
        self.play(Indicate(thirteen_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()

        text = Text("FOURTEEN  14 ", font_size=60)
        self.play(Write(text))
        self.play(text.animate.shift(UP * 3))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=60).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=60).next_to(ten_label, DOWN, buff=0.5)
        self.play(Write(plus_sign))
        self.wait(1)
        four_circles =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(4)])
        four_circles.arrange_in_grid(rows=2, cols=5, buff=0.2)
        four_circles.next_to(plus_sign, DOWN, buff=0.5)
        self.play(LaggedStart(*[Write(circle) for circle in four_circles], lag_ratio=0.1))
        four_label = Text("4", font_size=60).next_to(four_circles,DOWN)
        self.play(Write(four_label))
        self.wait(1)
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(1)
        ten_circles2 = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(RIGHT+UP*1.5)
        ten_circles2.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(RIGHT * 3)
        # ten_circles2.add(SurroundingRectangle(ten_circles2,color=YELLOW))
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles2], lag_ratio=0.1))
        four_circles1 =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(4)])
        four_circles1.arrange_in_grid(rows=2, cols=5, buff=0.2)
        four_circles1.next_to(ten_circles2, DOWN, buff=0.2)
        self.play(LaggedStart(*[Write(circle) for circle in four_circles1], lag_ratio=0.1))
        fourteen_label = Text("14", font_size=60).next_to(four_circles1,DOWN,buff=0.5)
        self.play(Write(fourteen_label))
        self.wait(1)
        self.play(Indicate(fourteen_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()
        
        text = Text("FIFTEEN  15", font_size=60)
        self.play(Write(text))
        self.play(text.animate.shift(UP * 3))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=60).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=60).next_to(ten_label, DOWN, buff=0.5)
        self.play(Write(plus_sign))
        self.wait(1)
        five_circles =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(5)])
        five_circles.arrange_in_grid(rows=2, cols=5, buff=0.2)
        five_circles.next_to(plus_sign, DOWN, buff=0.5)
        self.play(LaggedStart(*[Write(circle) for circle in five_circles], lag_ratio=0.1))
        five_label = Text("5", font_size=60).next_to(five_circles,DOWN)
        self.play(Write(five_label))
        self.wait(1)
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(1)
        ten_circles2 = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(RIGHT+UP*1.5)
        ten_circles2.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(RIGHT * 3)
        # ten_circles2.add(SurroundingRectangle(ten_circles2,color=YELLOW))
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles2], lag_ratio=0.1))
        five_circles1 =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(5)])
        five_circles1.arrange_in_grid(rows=2, cols=5, buff=0.2)
        five_circles1.next_to(ten_circles2, DOWN, buff=0.2)
        self.play(LaggedStart(*[Write(circle) for circle in five_circles1], lag_ratio=0.1))
        fifteen_label = Text("15", font_size=60).next_to(five_circles1,DOWN,buff=0.5)
        self.play(Write(fifteen_label))
        self.wait(1)
        self.play(Indicate(fifteen_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()

        text = Text("SIXTEEN  16", font_size=60)
        self.play(Write(text))
        self.play(text.animate.shift(UP * 3))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=60).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=60).next_to(ten_label, DOWN, buff=0.5)
        self.play(Write(plus_sign))
        self.wait(1)
        six_circles =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(6)])
        six_circles.arrange_in_grid(rows=2, cols=5, buff=0.2)
        six_circles.next_to(plus_sign, DOWN, buff=0.5)
        self.play(LaggedStart(*[Write(circle) for circle in six_circles], lag_ratio=0.1))
        six_label = Text("6", font_size=60).next_to(six_circles,DOWN)
        self.play(Write(six_label))
        self.wait(1)
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(1)
        ten_circles2 = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(RIGHT+UP*1.5)
        ten_circles2.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(RIGHT * 3)
        # ten_circles2.add(SurroundingRectangle(ten_circles2,color=YELLOW))
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles2], lag_ratio=0.1))
        six_circles1 =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(6)])
        six_circles1.arrange_in_grid(rows=2, cols=5, buff=0.2)
        six_circles1.next_to(ten_circles2, DOWN, buff=0.2)
        self.play(LaggedStart(*[Write(circle) for circle in six_circles1], lag_ratio=0.1))
        sixteen_label = Text("16", font_size=60).next_to(six_circles1,DOWN,buff=0.5)
        self.play(Write(sixteen_label))
        self.wait(1)
        self.play(Indicate(sixteen_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()


        text = Text("SEVENTEEN  17", font_size=60)
        self.play(Write(text))
        self.play(text.animate.shift(UP * 3))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=60).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=60).next_to(ten_label, DOWN, buff=0.5)
        self.play(Write(plus_sign))
        self.wait(1)
        seven_circles =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(7)])
        seven_circles.arrange_in_grid(rows=2, cols=5, buff=0.2)
        seven_circles.next_to(plus_sign, DOWN, buff=0.5)
        self.play(LaggedStart(*[Write(circle) for circle in seven_circles], lag_ratio=0.1))
        seven_label = Text("7", font_size=60).next_to(seven_circles,DOWN)
        self.play(Write(seven_label))
        self.wait(1)
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(1)
        ten_circles2 = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(RIGHT+UP*1.5)
        ten_circles2.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(RIGHT * 3)
        # ten_circles2.add(SurroundingRectangle(ten_circles2,color=YELLOW))
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles2], lag_ratio=0.1))
        seven_circles1 =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(7)])
        seven_circles1.arrange_in_grid(rows=2, cols=5, buff=0.2)
        seven_circles1.next_to(ten_circles2, DOWN, buff=0.2)
        self.play(LaggedStart(*[Write(circle) for circle in seven_circles1], lag_ratio=0.1))
        seventeen_label = Text("17", font_size=60).next_to(seven_circles1,DOWN,buff=0.5)
        self.play(Write(seventeen_label))
        self.wait(1)
        self.play(Indicate(seventeen_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()
        

        text = Text("EIGHTEEN  18", font_size=60)
        self.play(Write(text))
        self.play(text.animate.shift(UP * 3))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=60).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=60).next_to(ten_label, DOWN, buff=0.5)
        self.play(Write(plus_sign))
        self.wait(1)
        eight_circles =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(8)])
        eight_circles.arrange_in_grid(rows=2, cols=5, buff=0.2)
        eight_circles.next_to(plus_sign, DOWN, buff=0.5)
        self.play(LaggedStart(*[Write(circle) for circle in eight_circles], lag_ratio=0.1))
        eight_label = Text("8", font_size=60).next_to(eight_circles,DOWN)
        self.play(Write(eight_label))
        self.wait(1)
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(1)
        ten_circles2 = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(RIGHT+UP*1.5)
        ten_circles2.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(RIGHT * 3)
        # ten_circles2.add(SurroundingRectangle(ten_circles2,color=YELLOW))
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles2], lag_ratio=0.1))
        eight_circles1 =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(8)])
        eight_circles1.arrange_in_grid(rows=2, cols=5, buff=0.2)
        eight_circles1.next_to(ten_circles2, DOWN, buff=0.2)
        self.play(LaggedStart(*[Write(circle) for circle in eight_circles1], lag_ratio=0.1))
        eighteen_label = Text("18", font_size=60).next_to(eight_circles1,DOWN,buff=0.5)
        self.play(Write(eighteen_label))
        self.wait(1)
        self.play(Indicate(eighteen_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()

        text = Text("NINETEEN  19", font_size=60)
        self.play(Write(text))
        self.play(text.animate.shift(UP * 3))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=60).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=60).next_to(ten_label, DOWN, buff=0.5)
        self.play(Write(plus_sign))
        self.wait(1)
        nine_circles =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(9)])
        nine_circles.arrange_in_grid(rows=2, cols=5, buff=0.2)
        nine_circles.next_to(plus_sign, DOWN, buff=0.5)
        self.play(LaggedStart(*[Write(circle) for circle in nine_circles], lag_ratio=0.1))
        nine_label = Text("9", font_size=60).next_to(nine_circles,DOWN)
        self.play(Write(nine_label))
        self.wait(1)
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(1)
        ten_circles2 = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(RIGHT+UP*1.5)
        ten_circles2.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(RIGHT * 3)
        # ten_circles2.add(SurroundingRectangle(ten_circles2,color=YELLOW))
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles2], lag_ratio=0.1))
        nine_circles1 =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(9)])
        nine_circles1.arrange_in_grid(rows=2, cols=5, buff=0.2)
        nine_circles1.next_to(ten_circles2, DOWN, buff=0.2)
        self.play(LaggedStart(*[Write(circle) for circle in nine_circles1], lag_ratio=0.1))
        nineteen_label = Text("19", font_size=60).next_to(nine_circles1,DOWN,buff=0.5)
        self.play(Write(nineteen_label))
        self.wait(1)
        self.play(Indicate(nineteen_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()

        text = Text("TWENTY  20", font_size=60)
        self.play(Write(text))
        self.play(text.animate.shift(UP * 3))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=60).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=60).next_to(ten_label, DOWN, buff=0.5)
        self.play(Write(plus_sign))
        self.wait(1)
        ten10_circles =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(10)])
        ten10_circles.arrange_in_grid(rows=2, cols=5, buff=0.2)
        ten10_circles.next_to(plus_sign, DOWN, buff=0.5)
        self.play(LaggedStart(*[Write(circle) for circle in ten10_circles], lag_ratio=0.1))
        ten10_label = Text("10", font_size=60).next_to(ten10_circles,DOWN)
        self.play(Write(ten10_label))
        self.wait(1)
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(1)
        ten_circles2 = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(RIGHT+UP*1.5)
        ten_circles2.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(RIGHT * 3)
        # ten_circles2.add(SurroundingRectangle(ten_circles2,color=YELLOW))
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles2], lag_ratio=0.1))
        ten_circles1 =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(10)])
        ten_circles1.arrange_in_grid(rows=2, cols=5, buff=0.2)
        ten_circles1.next_to(ten_circles2, DOWN, buff=0.2)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles1], lag_ratio=0.1))
        twenty_label = Text("20", font_size=60).next_to(ten_circles1,DOWN,buff=0.5)
        self.play(Write(twenty_label))
        self.wait(1)
        self.play(Indicate(twenty_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()

        text = Text("Look at the pictures. Read the numbers. Write them.", font_size=40).to_edge(UP)
        self.play(Write(text))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=60).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=60).next_to(ten_label, DOWN, buff=0.5)
        self.play(Write(plus_sign))
        self.wait(1)
        two_circles =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(2)])
        two_circles.arrange_in_grid(rows=2, cols=5, buff=0.2)
        two_circles.next_to(plus_sign, DOWN, buff=0.5)
        self.play(LaggedStart(*[Write(circle) for circle in two_circles], lag_ratio=0.1))
        two_label = Text("2", font_size=60).next_to(two_circles,DOWN)
        self.play(Write(two_label))
        self.wait(1)
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(3)
        twelve_label = Text("12", font_size=60).next_to(equal_sign,RIGHT,buff=2)
        self.play(Write(twelve_label))
        self.wait(1)
        self.play(Indicate(twelve_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()

        text = Text("Look at the pictures. Read the numbers. Write them.", font_size=40).to_edge(UP)
        self.play(Write(text))
        ten_circles = VGroup(*[Circle(radius=0.5, color=BLUE).scale(0.5) for _ in range(10)]).move_to(LEFT+UP*1.5)
        ten_circles.arrange_in_grid(rows=2, cols=5, buff=0.2).shift(LEFT * 3)
        ten_circles.add(SurroundingRectangle(ten_circles,color=YELLOW))
        ten_label = Text("10", font_size=60).next_to(ten_circles, DOWN)
        self.play(LaggedStart(*[Write(circle) for circle in ten_circles], lag_ratio=0.1))
        self.play(Write(ten_label))
        plus_sign = Text("+", font_size=60).next_to(ten_label, DOWN, buff=0.5)
        self.play(Write(plus_sign))
        self.wait(1)
        five_circles =  VGroup(*[Circle(radius=0.5, color=RED).scale(0.5) for _ in range(5)])
        five_circles.arrange_in_grid(rows=2, cols=5, buff=0.2)
        five_circles.next_to(plus_sign, DOWN, buff=0.5)
        self.play(LaggedStart(*[Write(circle) for circle in five_circles], lag_ratio=0.1))
        five_label = Text("5", font_size=60).next_to(five_circles,DOWN)
        self.play(Write(five_label))
        self.wait(1)
        equal_sign = Text("=", font_size=72).next_to(plus_sign, RIGHT, buff=4)
        self.play(Write(equal_sign))
        self.wait(3)
        fifteen_label = Text("15", font_size=60).next_to(equal_sign,RIGHT,buff=2)
        self.play(Write(fifteen_label))
        self.wait(1)
        self.play(Indicate(fifteen_label, scale_factor=1.5))
        self.wait(1)
        self.fadeOutCurrentScene()

        title = Text("Number Concepts").scale(1.2).to_edge(UP)
        self.play(Write(title))
        number_line = NumberLine(x_range=[1, 20, 1], length=10, include_numbers=True)
        number_line.shift(UP * 2)
        self.play(Create(number_line))

        heading_first = Text("Write the number which \ncomes before the \nnumber in the box").scale(0.35)
        heading_last = Text("Write the number which \ncomes after the \nnumber in the box").scale(0.35)
        heading_middle = Text("Write the number which \ncomes in between the \nnumbers in the box").scale(0.35)
        
        heading_first.to_edge(LEFT)
        heading_last.next_to(heading_first, RIGHT, buff=2)
        heading_middle.next_to(heading_last, RIGHT, buff=2)
        self.play(Write(heading_first), Write(heading_last), Write(heading_middle))
        first_numbers = [
            ("", "4"), 
            ("", "7"), 
            ("", "16"), 
            ("", "20")
        ]
        last_numbers = [
            ("7", ""), 
            ("12", ""), 
            ("16", ""), 
            ("18", "")
        ]
        middle_numbers = [
            ("1", "", "3"), 
            ("12", "", "14"), 
            ("15", "", "17")
        ]

        first_boxes = [VGroup(Square(0.5), Square(0.5)).arrange(RIGHT, buff=0.1) for _ in first_numbers]
        first_group = VGroup(*first_boxes).arrange(DOWN, buff=0.3).to_edge(LEFT).shift(DOWN * 2,RIGHT*1)
        for box in first_boxes:
            self.play(Create(box,run_time=0.5))
        
        last_boxes = [VGroup(Square(0.5), Square(0.5)).arrange(RIGHT, buff=0.1) for _ in last_numbers]
        last_group = VGroup(*last_boxes).arrange(DOWN, buff=0.3).next_to(first_group, RIGHT, buff=3)
        for box in last_boxes:
            self.play(Create(box,run_time=0.5))
        
        middle_boxes = [VGroup(Square(0.5), Square(0.5), Square(0.5)).arrange(RIGHT, buff=0.1) for _ in middle_numbers]
        middle_group = VGroup(*middle_boxes).arrange(DOWN, buff=0.3).next_to(last_group, RIGHT, buff=3)
        for box in middle_boxes:
            self.play(Create(box,run_time=0.5))
        self.wait(1)
        
        for i, (a, b) in enumerate(first_numbers):
            self.play(Write(Text(a).scale(0.5).move_to(first_boxes[i][0])))
            self.play(Write(Text(b).scale(0.5).move_to(first_boxes[i][1])))
        self.wait(1)
        
        for i, (a, b) in enumerate(last_numbers):
            self.play(Write(Text(a).scale(0.5).move_to(last_boxes[i][0])))
            self.play(Write(Text(b).scale(0.5).move_to(last_boxes[i][1])))
        self.wait(1)
        
        for i, (a, b, c) in enumerate(middle_numbers):
            self.play(Write(Text(a).scale(0.5).move_to(middle_boxes[i][0])))
            self.play(Write(Text(b).scale(0.5).move_to(middle_boxes[i][1])))
            self.play(Write(Text(c).scale(0.5).move_to(middle_boxes[i][2])))
        self.wait(2)

        first_numbers = [
            ("3", ""), 
            ("6", ""), 
            ("15", ""), 
            ("19", "")
        ]
        last_numbers = [
            ("", "8"), 
            ("", "13"), 
            ("", "17"), 
            ("", "19")
        ]
        middle_numbers = [
            ("", "2", ""), 
            ("", "13", ""), 
            ("", "16", "")
        ]
        
        first_boxes = [VGroup(Square(0.5), Square(0.5)).arrange(RIGHT, buff=0.1) for _ in first_numbers]
        first_group = VGroup(*first_boxes).arrange(DOWN, buff=0.3).to_edge(LEFT).shift(DOWN * 2,RIGHT*1)
        for box in first_boxes:
            self.play(Create(box,run_time=0.4))
        
        last_boxes = [VGroup(Square(0.5), Square(0.5)).arrange(RIGHT, buff=0.1) for _ in last_numbers]
        last_group = VGroup(*last_boxes).arrange(DOWN, buff=0.3).next_to(first_group, RIGHT, buff=3)
        for box in last_boxes:
            self.play(Create(box,run_time=0.4))
        
        middle_boxes = [VGroup(Square(0.5), Square(0.5), Square(0.5)).arrange(RIGHT, buff=0.1) for _ in middle_numbers]
        middle_group = VGroup(*middle_boxes).arrange(DOWN, buff=0.3).next_to(last_group, RIGHT, buff=3)
        for box in middle_boxes:
            self.play(Create(box,run_time=0.4))
        self.wait(1)
        
        for i, (a, b) in enumerate(first_numbers):
            self.play(Write(Text(a).scale(0.5).move_to(first_boxes[i][0])))
            self.play(Write(Text(b).scale(0.5).move_to(first_boxes[i][1])))
        self.wait(1)
        
        for i, (a, b) in enumerate(last_numbers):
            self.play(Write(Text(a).scale(0.5).move_to(last_boxes[i][0])))
            self.play(Write(Text(b).scale(0.5).move_to(last_boxes[i][1])))
        self.wait(1)
        
        for i, (a, b, c) in enumerate(middle_numbers):
            self.play(Write(Text(a).scale(0.5).move_to(middle_boxes[i][0])))
            self.play(Write(Text(b).scale(0.5).move_to(middle_boxes[i][1])))
            self.play(Write(Text(c).scale(0.5).move_to(middle_boxes[i][2])))
        self.wait(2)
        self.fadeOutCurrentScene()

    def SetDeveloperList(self):
        self.DeveloperList="Srujan"

    def SetSourceCodeFileName(self):
        self.SourceCodeFileName="Grade1Chapter9NumbersFrom10to20.py"


if __name__ == "__main__":
    scene = NUM10to20()
    scene.render()